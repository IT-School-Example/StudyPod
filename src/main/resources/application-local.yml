# 스프링 프로필 : local (본인 로컬 컴퓨터로 톰캣 실행, 원내 Postgresql DB)
spring:
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  jackson:
    default-property-inclusion: non_null
  h2:
    console:
      enabled: true # /h2-console 설정
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;INIT=CREATE SCHEMA IF NOT EXISTS address # 메모리 H2 DB 경로 설정
#  data:
#    redis:
#      host: my-redis.xxxxxx.ng.0001.use1.cache.amazonaws.com
#      port: 6379
#      timeout: 60000
  jpa:
    #show-sql: true # 전송 쿼리 확인, 애플리케이션 실행과정에 쿼리의 실행 구문을 모두 보여줌
    hibernate:
      ddl-auto: create  # 매번 스키마 생성 (개발/로컬 환경에 적합)
    properties:
      hibernate:
        format_sql: true
        highlight_sql: true
        dialect: org.hibernate.dialect.H2Dialect  # H2 방언 사용
        use_sql_comments: true
    # defer-datasource-initialization: true  # 데이터 소스 초기화를 지연
  devtools:
    livereload:
      enabled: true # 파일(특히 정적 리소스나 템플릿)이 변경되면 livereload 서버가 브라우저에 변경을 감지하도록 신호를 보내어 자동으로 새로고침되게 함
    restart:
      enabled: false # Java 클래스 변경에 따른 애플리케이션 자동 재시작을 제어하는 옵션
  thymeleaf:
    cache: false # 템플릿을 수정할 때마다 변경 사항이 바로 반영되도록 캐싱 비활성화

  cloud:
    aws:
      s3:
        enabled: true
        bucket: ${S3_BUCKET_NAME}
      stack.auto: false
      region.static: ap-northeast-2
      credentials:
        access-key: ${AWS_ACCESS_KEY_ID}
        secret-key: ${AWS_SECRET_ACCESS_KEY}

logging.level:
  org.hibernate.SQL: debug
  # 하이버네이트 6 이상
  org.hibernate.orm.jdbc.bind: trace
  # 하이버네이트 5 이하
  #org.hibernate.type.descriptor.sql.BasicBinder: trace

springdoc:
  swagger-ui:
    path: /swagger-ui
    group-order: DESC
    tags-sorter: alpha
    operations-sorter: method
    disable-swagger-default-url: true
    display-request-duration: true
    doc-expansion: none
  api-docs:
    path: /api-docs
  show-actuator: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  paths-to-match:
    - /api/**

jwt:
  issuer: studypod@studypod.com
  # jjwt 라이브러리 0.11.0 버전부터 secret_key에 Base64로 인코딩된 문자열을 요구하는 방식으로 변경
  # JJWT 라이브러리는 HMAC-SHA 알고리즘 사용 시 256비트(32바이트) 미만의 키를 강제로 거부
  # 256비트 미만 키는 보안상 취약해서 라이브러리가 애초에 안전하지 않은 키 사용을 막으려는 목적
  access-secret: c3R1ZHlwb2Qtc3ByaW5nYm9vdC1hY2Nlc3Mtc2VjcmV0LWtleQ==  # studypod-springboot-access-secret-key를 BASE 64로 인코딩한 값
  refresh-secret: c3R1ZHlwb2Qtc3ByaW5nYm9vdC1yZWZyZXNoLXNlY3JldC1rZXk= # studypod-springboot-refresh-secret-key를 BASE 64로 인코딩한 값
